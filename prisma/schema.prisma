generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model daily_records {
  id                  Int       @id(map: "daily_records_pk") @default(autoincrement())
  user_id             Int
  date                String
  time_slept          DateTime? @db.Time(6)
  time_woke_up        DateTime? @db.Time(6)
  total_time_sleeping DateTime? @db.Time(6)
  general_emotion     String?   @db.VarChar(255)
  emotion_event       String?
  exercise            Boolean?
  food                String?   @db.VarChar(255)
  water               String?   @db.VarChar(255)
  bad_habit           String?   @db.VarChar(255)
  good_habit          String?   @db.VarChar(255)
  thoughts            String?
  users               users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "daily_records_fk0")
}

model habits {
  id         Int    @id(map: "habits_pk") @default(autoincrement())
  user_id    Int
  bad_habit  String @db.VarChar(255)
  good_habit String @db.VarChar(255)
  users      users  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "habits_fk0")
}

model patient_sessions {
  id     Int    @id(map: "patient_sessions_pk") @default(autoincrement())
  token  String @unique(map: "public.patient_sessions_token_key")
  userId Int
  users  users  @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "patient_sessions_fk0")
}

model psychologists {
  id                     Int                      @id(map: "psychologists_pk") @default(autoincrement())
  name                   String
  crp                    String                   @unique(map: "public.psychologists_crp_key") @db.VarChar(50)
  telephone              String                   @unique(map: "public.psychologists_telephone_key") @db.VarChar(20)
  email                  String                   @unique(map: "public.psychologists_email_key") @db.VarChar(50)
  password               String                   @db.VarChar(50)
  photo                  String                   @db.VarChar(50)
  psychologists_sessions psychologists_sessions[]
  users                  users[]
}

model psychologists_sessions {
  id              Int           @id(map: "psychologists_sessions_pk") @default(autoincrement())
  token           String        @unique(map: "public.psychologists_sessions_token_key")
  psychologist_id Int
  psychologists   psychologists @relation(fields: [psychologist_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "psychologists_sessions_fk0")
}

model users {
  id               Int                @id(map: "users_pk") @default(autoincrement())
  name             String
  email            String             @unique(map: "public.users_email_key")
  password         String
  psychologist_crp String?            @db.VarChar(50)
  photo            String
  gender           String?            @db.VarChar(255)
  daily_records    daily_records[]
  habits           habits[]
  patient_sessions patient_sessions[]
  psychologists    psychologists?     @relation(fields: [psychologist_crp], references: [crp], onDelete: NoAction, onUpdate: NoAction, map: "users_fk0")
}
